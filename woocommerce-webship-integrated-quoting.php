<?php
/* 
Plugin Name: WooCommerce Webship Integrated Quoting
Description: This is a Wordpress plugin that connects to WooCommerce and gets shipping quotes from Webship shipping services.
Version: 1.91
Author: Rock Solid Internet Systems
*/
include_once(ABSPATH . 'wp-admin/includes/plugin.php');

// If this file is called directly, abort.
if (!defined( 'WPINC' )) {
    die;
}

if (is_plugin_active('woocommerce/woocommerce.php')) {
    add_action( 'woocommerce_shipping_init', 'webship_integrated_quoting_shipping_method');
    

    function webship_integrated_quoting_shipping_method() {
        if (!class_exists('Webship_Integrated_Quoting_Method')) {
            
            class Webship_Integrated_Quoting_Method extends WC_Shipping_Method {

              /**
               * Constructor for the shipping class
               * 
               * @access public
               * @return void
               */               
                public function __construct() {
                    $this->id = 'webship';
                    $this->method_title = __('Webship Integrated Quoting', 'webship');
                    $this->method_description = __('Integrated Quoting from Webship', 'webship');
                    
                    $this->init();
                    
                    $this->enabled = isset($this->settings['enabled']) ? $this->settings['enabled'] : 'yes';
                } 
                
               /**
                * Init your settings
                * 
                * @access public
                * @return void
                */ 
                function init() {
                   // Load the settings API
                   $this->init_form_fields();
                   $this->init_settings();
                   
                   // Save settings in admin if you have any defined
                   add_action( 'woocommerce_update_options_shipping_' .  $this->id, array( $this, 'process_admin_options'));
                }

                /**
                 * Define settings field for this shipping
                 * @return void
                 */            
                function init_form_fields() {
                  
                    $this->form_fields = array(
                        
                        'enabled' => array(
                            'title' => __ ('Enable', 'webship' ),
                            'type' => 'checkbox',
                            'description' => __( 'Enable Integrated Quoting', 'webship' ),
                            'default' => 'yes'
                        ),
                        
                        'url' => array(
                            'title' => __( 'Webship URL', 'webship'),
                            'type' => 'text',
                            'description' => __( 'Your Webship Base URL', 'webship'),
                            'default' => __('','webship')
                        ),

                        'apiKey' => array(
                            'title' => __ ( 'API Key', 'webship'),
                            'type'  => 'text',
                            'description' => __( 'Your WooCommerce Integrated Quoting API Key generated by Webship', 'webship'),
                            'default' => __('','webship')
                        ),
                    );
                    
                }
                
                /**
                 * This function reaches out to Webship and returns shipping rates as specified in the Integrated Quoting settings.
                 * 
                 * @access public
                 * @param mixed $package
                 * @return void
                 */
                public function calculate_shipping($package = array()) {
                    $address = array(
                        'country'   => trim($package['destination']['country']),
                        'state'     => trim($package['destination']['state']),
                        'zip'       => trim($package['destination']['postcode']),
                        'city'      => trim($package['destination']['city']),
                        'address1'  => trim($package['destination']['address']),
                        'address2'  => trim($package['destination']['address_2'])
                    );
                    
                    $products = array();
                    foreach ($package['contents'] as $itemId => $values) {
                        $_product = $values['data'];
                        $length = $_product->get_length();
                        $width = $_product->get_width();
                        $height = $_product->get_height();
                        $weight = $_product->get_weight();
                        $quantity = $values['quantity'];
                        $name = $_product->get_title();
                        $price = $_product->get_price();
                        
                        $product = array(
                            'name'      => $name,
                            'length'    => $length,
                            'width'     => $width,
                            'height'    => $height,
                            'weight'    => $weight,
                            'quantity'  => $quantity,
                            'price'     => $price
                        );
                        
                        $products[] = $product;
                    }

                    $weightUnit = get_option('woocommerce_weight_unit');
                    $dimUnit = get_option('woocommerce_dimension_unit');
                    
                    if ($weightUnit === 'lbs') $weightUnit = 'lb';

                    $_buildNumber = !empty($_SERVER['WOOCOMMERCE_WEBSHIP_INTEGRATED_QUOTING_BUILD_NUMBER']) ? "_{$_SERVER['WOOCOMMERCE_WEBSHIP_INTEGRATED_QUOTING_BUILD_NUMBER']}" : '';

                    $response = $this->sendPostData("{$this->settings['url']}/ec$_buildNumber/api/v3/integratedQuotingGeneral", json_encode(array(
                        'address'    => $address,
                        'products'   => $products,
                        'apiKey'     => trim($this->settings['apiKey']),
                        'currency'   => get_woocommerce_currency(),
                        'weightUnit' => $weightUnit,
                        'dimUnit'    => $dimUnit,
                        'pluginVersionNumber' => '1.91'
                    )));
                    $curlResponse = json_decode($response, true);

                    $quotes = $curlResponse['quotes'];

                    if (count($quotes) > 0) {       
                        foreach ($quotes as $quote) {
                            $this->add_rate(array(
                                'id'    => $quote['serviceType'],
                                'label' => $quote['serviceName'],
                                'cost'  => $quote['totalPrice']
                            ));
                        }
                    }
                }
                
                private function sendPostData($url, $post) {
                    $ch = curl_init($url);
                    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
                    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                    curl_setopt($ch, CURLOPT_POSTFIELDS, $post);
                    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
                    $result = curl_exec($ch);
                    return $result;
                }
            }
            
            add_filter( 'woocommerce_shipping_methods', 'add_webship_integrated_qutoing_shipping_method');
            
            function add_webship_integrated_qutoing_shipping_method($methods) {
                $methods[] = 'Webship_Integrated_Quoting_Method';
                return $methods;
            }
            
            add_action('woocommerce_settings_saved','check_for_admin_fields');
            
            function check_for_admin_fields($args) {
                $Webship_Integrated_Quoting_Method = new Webship_Integrated_Quoting_Method();
                
                $url = (string) $Webship_Integrated_Quoting_Method->settings['url'];
                $apiKey = (string) $Webship_Integrated_Quoting_Method->settings['apiKey'];
        
                if (empty($url)) {
                    WC_Admin_Settings::add_error('Webship URL is a required field');
                }
        
                if (empty($apiKey)){
                    WC_Admin_Settings::add_error('API Key is a required field');
                }
            }
        }
    }
}
